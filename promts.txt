В текущем файле найди секцию cases-section и добавь в нее блок с каорточками. Карточки расположены по 2 в строку.
Описание карточки:
- в верхней части карточки блок с изображением со скругленными краями
- во всех карточках одинаковые изображения возьми от сюда public\img\projects\p1.jpg
- в нижней части параграф с текстом - Реализованный Проекты
- не используй эффект увеличение при наведении на карточку

Стили реализуй в scss, размести их в файле _projects.scss и подключи этот файл в main.scss. В написанном файле стилей переменные импортируй из _vars.scss. Сделай адаптацию под устройства.

___________

В текущем файле после блока section__description и добавь блок с каорточками согласно следующему описанию:
В левой части блока расположена картинка со скругленными краями, изображение возьми от сюда: public\img\projects\p1.jpg.

Правый блок будет представлять из себя перечень преимуществ выстроенных в столбик. Формат элементв в нем будет следующий
- слеева круг с номером
- справа блок, заголовок жирным шрифтом под ним текст не жирным
- при реализации правого блока опирайся на прикрепленное изображение

___________

В текущем файле найди секцию work-step-section и добавь в нее блок разметка которого изображена на прикрепленной картинке.

Иконки возьми из файлов:
public\img\icon\payment\pay_1.svg
public\img\icon\payment\pay_2.svg
public\img\icon\payment\pay_3.svg
public\img\icon\payment\pay_4.svg
public\img\icon\payment\pay_5.svg
public\img\icon\payment\pay_6.svg

Стили реализуй в scss, размести их в файле _payments.scss, в этом файле стилей переменные импортируй из _vars.scss. Сделай адаптацию под устройства.

___________

В компоненте footer сверстай подвал согласно следующекму описанию:

- цвет подвала #1B2C40
- у подвала закруглены левый верхний и правый верхний углы
- Цвет шрифта во всех элементах подвала белый
- в подвале 5 колонок
- Во всех кроме первой есть заголовок h3 под этим заголовком расположено меню в виде списка ul стилизацию меню сделай таким образом чтобы вложенные элементы li и a не имели классов

Описание первой колонки подвала:
- первым идет логотип взять его тут public\img\logo_footer.svg
- далее идут 2 телефона в формате + 7 (9999) 99-99-99
- под телефонами идет кнопка с классами button, button-orange
- далее время работы в формате Пн-Пт, с 9:00 до 18:00
- под ним ссылка на почтовый ящик info@stroy-dom86.ru
- в самом низу 2 ссылки в виде иконок взять их из от сюда: public\img\icon\services\yandex.svg, public\img\icon\services\2gis.svg

Стили реализуй в scss, размести их в файле _footer.scss, в этом файле стилей переменные импортируй из _vars.scss. Сделай адаптацию под устройства.


________

В файле ipoteka.blade.php после строки {!! $page->description !!} сверстай блок по следующему описанию:

В блоке будут 2 вложенных элемента с закругленными краями распологаться будут по горизонтали и вытянуты на всю ширину контейнера. Цвет шрифта во всех блоках белый.

Правый блок:
Цвет фона возьми из переменной $sub_color;
В верхней части расположенна иконка, используй иконку из svg спрайта ID иконки 'bank'. Для подключения используй вот такую конструкцию:

<svg class="sprite_icon">
    <use xlink:href="#vk_icon"></use>
</svg>

Под иконкой заголовок h3 с текстом "Ипотека до"
Под ним строка "5 000 000 ₽" Эта строка должна выделяться засчет жирного шрифта.

Левый блок:
Цвет фона возьми из переменной $main_color;
В верхней части расположенна иконка, используй иконку из svg спрайта ID иконки 'calendar'. Для подключения используй вот такую конструкцию:

<svg class="sprite_icon">
    <use xlink:href="#vk_icon"></use>
</svg>

Под иконкой строка с текстом "До 30 лет" при этом цифра 30 должна быть выделена шрифтом большего размера.
Под ним строка "Первоначальный взнос от 10%"


Стили реализуй в scss, размести их в файле _ipoteka_section.scss, в этом файле стилей переменные импортируй из _vars.scss. Сделай адаптацию под устройства.

________

Сделай в блоке case-card__info выровненние по левому краю.

Добавь в блок с класоом case-card__info над блоком с классом case-card__text блок в который будут выводиться 2 параметра Тип и колличество этажей. 2 параметра должны быть расположены горизонтально. наименовалие параметра должно быть цветом из переменной $gray_border_color а значение параметра цветом $main_color.

При работе со стилями изменяй только те которые касаются задания, остальные не трогай.

________

В текущем файле сделай блок в котором будет 2 горизонтально расположенных внутренних блока. Размести этот блок после div c классом section__header.  Верхний внутренний блок будет разделена на 2 части:
В левой нужно встроить swiper слайдер на основе web компонента. Внутри каждого слайда будут картинки так же в слайдере должен быть навигации. У слайдера должны быть закругленные края.

В правой части нужно разместить список со следующими параметрами:

- Тип
- Количество этажей
- Место нахождения
- Координаты
- Материал стен
- Облицовка
- Фундамент
- Кровля
- Перекрытия
- Галерея

Формат списка:

Имя параметра слева, значение параметра справа по середине линия из точек соединяющая имя и значение.

Нижняя секция будет содержать текстовое описание. Этой секции нужно дополнительно к классам которые ты сделаешь добавить класс text_styles.

Стили реализуй в scss, размести их в файле _portfolio.scss, в этом файле стилей переменные импортируй из _vars.scss. Сделай адаптацию под устройства.

________

В текущем файле в цикле  @foreach реализуй вывод блоков в 2 столбика, Формат блока Имя параметра (переменная $item->name)  слева с права значение параметра (переменная $item->price) перед значением надпись 'от' после надпись знак рубля м2 само значение выделено жирным. По середине линия из точек соединяющая имя и значение.

Стили реализуй в scss, размести их в файле _prices.scss, в этом файле стилей переменные импортируй из _vars.scss не используй переменные которых нет в этом файле. Сделай адаптацию под устройства.

________

В файле resources\views\services\index.blade.php после div с классом cases-section__grid сверстай блок с карточками по 3 карточки в ряд. Описание карточек:

Карточка с округленными краями первым слоем изображение возьми вот это public\img\hometype\h2.png, поверх изображения оверлей с градиентом который идет снизу в верх от черного не прозрачного до черного прозрачного. В нижней части карточки заголовок с текстом "дополнительная услуга" Цвет шрифта белый, семейство шрифтов возьми из переменной $head_fonts,

Стили реализуй в scss, размести их в файле _services.scss, в этом файле стилей переменные импортируй из _vars.scss не используй переменные которых нет в этом файле. Сделай адаптацию под устройства.

________

В файле resources\views\services\page.blade.php после div с классом section__header сверстай блок согласно следующему описанию:

Блок состоит из 3 частей расположенных вертикально.

Верхний блок:

Цвет шрифта у всех элементов внутри блока белый.
У блока закруглены края,
Первый слой изображение возьми вот это public\img\hometype\h2.png, поверх оверлей отдельным div цвет черный прозрачность 70%.
В следующем слое блок с выравниванием по левому краю в котором расположены:
- Заголовок h1 с текстом "Фасадные работы"
- Подзаголовок с рыбным текстом около 100 символов
- Блок с 2мя кнопками "Задать вопрос", "Узнать цену"

Центральный блок:
- Этому блоку нужно дополнительно добавить класс text_styles
- Заполни этот блок рыбным текстом

Нижний блок:

В этом блоке придумай галерею.
Над этом блоком добавь заголовок h2 c текстом "Галереся выполненных работ"


Стили реализуй в scss, размести их в файле _services.scss, в этом файле стилей переменные импортируй из _vars.scss не используй переменные которых нет в этом файле. В файле _services.scss не меняфй уже написанные стили просто добавь новые. Сделай адаптацию под устройства.

_________

В файле resources\views\projects\page.blade.php после div с классом section--page-heade сверстай блок согласно следующему описанию:

Блок будет состоять из 2х колонок расположенных горизонтально. Каждая колонак будет иметь вертикальную ориентацию.

Содержание правой колонки:
В верхней части расположен swiper слайдер на основе web компонента, к элементам управления слайдера примени следующую стилизацию:
&::part(bullet-active) {
    background-color: $main_color;
}

&::part(bullet) {
    background-color: $main_color;
    opacity: 0.5;
}

Это позволит раскрасить пагинацию в нужные цвета.

Под слайдером идет блок с параметрами, разметка блока с парметрами:
<div class="dotted-grid">
    <div class="dotted-item">
        <span class="dotted-item__name">Тип</span>
        <span class="dotted-item__dots"></span>
        <span class="dotted-item__value">Дом</span>
    </div>
    ......
</div>

Стилизовать данный блок при выполнеии дадания не нужно он уже стилизован.
В блоке должны быть представлены следующие параметры:
- Количество этажей
- Общая площадь
- Материал стен
- Фундамент
- Высота потолка
- Перекрытия
- Мансарда
- Габариты для плана
- Пристройка


Содержание левой колонки:

В верхней части расположен блок с ценой. Описание блока с ценой:

Блок должен быть обведен рамкой со скругленными краями, цвет рамки из переменной $gray_border_color.

Первым элементом идет выпадающий список select со следующими опциями:
- Коробка
- Теплый контур
- Черновая отделка
- Под ключ

Под выпадающим списком параграф с комментарием длинной ~ 120 символов

Под ним будет идти цена сверху старая цена перечеркнутая, внизу действующая цена, в действующей цене в начале приставка "от" потом сам цена и в конце знак рубля символом.

Под блоком с ценой блок с 2-мя кнопками "Получить смету", "Получить консультацию" стилизовать кнопки не нужно просто добавь к ним класс button. Ко второй кнопке дополнительно класс button-orange.

Под блоком с ценой будет блок напоминания про ипотеку, описание блока: закругленные края, цвет фона #3bc935cc в правой части надпись жирным шрифтом "Доступна Ипотека:" Под ней надпись простым шрифтом "от 6 %" в левой части белая кнопка с надписью подробнее.

Тетьим будет блок с описанием, к классам которые ты сделаешь для данного блока добавить класс text_styles.


Стили реализуй в scss, размести их в файле _project_page.scss, в этом файле стилей переменные импортируй из _vars.scss не используй переменные которых нет в этом файле. Сделай адаптацию под устройства.

________

В файле resources\views\index.blade.php после секции с классом review-section сделай еще одну секцию согласно следующему описанию:

Внутри контейнера секции размещен блок с закругленными краями цвект фона из переменной $main_color, шрифт у всех элементов белый.
В верхней части заголовок h2 с текстом - Получить консультацию специалиста
Ниже идет форма с полями Имя и Телефон они обернуты в див и размещены в одну строку поля стилизовать не нужно они уже стилизованы
Ниже идет блок с согласием на обработку персональных данных:

 <label class="checbox_label" for="policy_ch">
                    <input type="checkbox" id="policy_ch">
                    <span>Я соглашаюсь с <a href="/page/politika-v-oblasti-obrabotki-personalnyx-dannyx"> политикой в области обработки персональных данных</a></span>
                </label>

                <label class="checbox_label" for="accept_ch">
                    <input type="checkbox" id="accept_ch">
                    <span>Я даю <a href="/page/soglasie-na-obrabotku-personalnyx-dannyx">согласие на обработку моих персональных данных</a></span>
                </label>

Данную разметку оберни дивом, ее так же не нужно стилизовать.

Ниже идет кнопка с текстом "Отправить" Кнопку не стилезуй просто добавь классы button, button-orange

Стили реализуй в scss, размести их в файле _cta.scss, в этом файле стилей переменные импортируй из _vars.scss не используй переменные которых нет в этом файле. В файле _services.scss не меняфй уже написанные стили просто добавь новые. Сделай адаптацию под устройства.

-------------------------------------------------------------Бэкэнд

В текущем файле миграций обяви поля таблицы руководствуясь списком:
- Раздел (строка)
- Наименование (строка)
- Единицы измерения (строка 50 символов)
- цена
- ссылка (nullable поле)

Обязательно проставь ->comment
Так же на основе этой миграции заполни поле $fillable соответствующей модели

___________

В текущем файле миграций обяви поля таблицы руководствуясь списком:
- Заголовок (строка)
- Изображение (строка 800 символов, nullable поле)
- Слаг (строка, уникальное)
- Описание (Текст, nullable поле)
- Тип (строка 50 символов)
- Количество этажей (число)
- Место нахождения (строка, nullable поле)
- Координаты (строка, nullable поле)
- Материал стен (строка, nullable поле)
- Облицовка (строка, nullable поле)
- Фундамент (строка, nullable поле)
- Кровля (строка, nullable поле)
- Перекрытия (строка, nullable поле)
- Галерея (json поле, nullable поле)

Обязательно проставь ->comment
Так же на основе этой миграции заполни поле $fillable и $casts соответствующей модели

______

В текущем файле миграций обяви поля таблицы руководствуясь списком:
- Заголовок (строка)
- Шаблон (строка)
- Изображение (строка 800 символов, nullable поле)
- Слаг (строка, уникальное)
- Короткое описание (Текст, nullable поле)
- Описание (Текст, nullable поле)
- Галерея (json поле, nullable поле)
- Секции (json поле, nullable поле)

Обязательно проставь ->comment
Так же на основе этой миграции заполни поле $fillable и $casts соответствующей модели

______

В файле миграций 2025_07_11_200805_create_projects_table.php объяви поля таблицы руководствуясь списком:
- Заголовок (строка)
- Изображение (строка 800 символов, nullable поле)
- Слаг (строка, уникальное)
- Описание (Текст, nullable поле)
- Галерея (json поле, nullable поле)
- Планировка (json поле, nullable поле)
- Тип (строка nullable поле)
- Количество этажей (число по умолчанию 1)
- Общая площадь (вещественное число)
- Материал стен (строка, nullable поле)
- Фундамент (строка, nullable поле)
- Высота потолка (вещественное число, nullable поле)
- Перекрытия (строка, nullable поле)
- Мансарда (логическое по умолчанию false)
- Габариты для плана (строка, nullable поле)
- Пристройка (строка, nullable поле)

Обязательно проставь ->comment
Так же на основе этой миграции заполни поле $fillable и $casts соответствующей модели

________

В файле миграций 2025_07_11_201526_create_project_tags_table.php объяви поля таблицы руководствуясь списком:

- Заголовок (строка)
- Подзаголовок (строка 800 символов, nullable поле)
- Изображение (строка 800 символов, nullable поле)
- Слаг (строка, уникальное)
- Описание (Текст, nullable поле)

Обязательно проставь ->comment
Так же на основе этой миграции заполни поле $fillable и $casts соответствующей модели

________

В файле миграций 2025_07_12_202253_create_materials_table.php объяви поля таблицы руководствуясь списком:

- Заголовок (строка)
- Подзаголовок (строка 800 символов, nullable поле)
- Изображение (строка 800 символов, nullable поле)
- Слаг (строка, уникальное)
- Порядок (цисло, по умолчанию 100)
- Описание (Текст, nullable поле)

Обязательно проставь ->comment
Так же на основе этой миграции заполни поле $fillable и $casts соответствующей модели

___________

В файле миграций 2025_07_12_213144_create_work_steps_table.php объяви поля таблицы руководствуясь списком:

- Номер шага (цисло, по умолчанию 1)
- Имя шага (строка)
- Описание (Текст, nullable поле)
- Описание дополнительное (Текст, nullable поле)

Обязательно проставь ->comment
Так же на основе этой миграции заполни поле $fillable и $casts соответствующей модели

___________

Сделай такие же массивы для следующего списка:
Дома из пеноблоков
Дома из арболита
Дома из керамзитоблока
Дома из керамоблока
Дома из силикатного блока
Дома из бруса
Дома из профилированного бруса

________

Верзняя строка h3 остальные список

________

На основе массива $data сгенерируй массив $seo_data, таким образом чтобы каждый элемент этого масиива сожержал поля: 'seo_title', 'seo_description' значения этих полей придумай на основе данных массива $data, массив не должен генерироваться в циуле он должен быть статичным а сожержимое полей сгенерированно  AI а не простой подстановкой

-------------------------------------------------------------Парсинг




Проанализируй страницу https://stroy-dom86.ru/page/prices/ найди на ней таблицу с перечнем классов: table table-striped table-services и на основе данных этой таблицы заполни массив $data расположенный в файле PriceSeeder.php В качестве примера использу те элементы которые есть в текущем массивае $data.

______

Отлично ты отработал секцию Водоснабжение, обработай таким же образом секции:
Возведение и кладка стен
Земляные работы
Канализация
Кровля крыши
Облицовка домов
Отопление
Проектирование домов и коттеджей
Ремонт и отделка
Строительство заборов
Строительство фундамента
Электромонтажные работы

И дополни данными массив $data в файле PriceSeeder.php

________

Проанализируй страницу https://stroydom-78.ru/portfolio/874/ и на ее основе сформируй массив следующего вида:

            [
                'title' => "Ремонт квартиры в новостройке",
                'img' => "https://example.com/images/portfolio2.jpg",
                'slug' => "repair-new-apartment",
                'description' => "Качественный ремонт в новостройке.",
                'type' => "Ремонт",
                'floors' => 1,
                'location' => "Санкт-Петербург",
                'coordinates' => "59.9343, 30.3351",
                'wall_material' => "Кирпич",
                'cladding' => null,
                'foundation' => null,
                'roofing' => null,
                'flooring' => null,
                'gallery' => json_encode([
                    "https://example.com/images/portfolio2_1.jpg"
                ]),
            ],
Вошедшие в массив фото скачай и положи в папку public\tmp_data\portfolio дод уникальными именами. Замени ссылки в элементе масиива на локальные. Сформированный массив добавь еще одним элементом в массив $data файла PortfolioSeeder.php

________

Зайди на страницу https://papa-dom.com/completed/dom-iz-avtoklavnogo-gazobetona-v-ssolyanka и скачай размещенные на ней фото из блока с классом ready_card_general_image, а так же из блока с классом ready_card_gallery_wrap но в этом блоке скачивай фото ссылки на которые размещены в аттрибутах href ссылоу расположенных в данном блоке. Скаченные изображения помести в папку public\tmp_data\portfolio\port_1

________

В текущем файле команды реализуй мне следубщий функционал:
Команда запрашивает адрес ссылки
Команда запрашивает номер проекта
После создается новая директория внутри директории public\tmp_data\projects по следующему шаблону
pr_{номер проекта}
В нутрь созданной дирректории скачиваются фото с введенной ранее страницы. ссылки для скачивания нужно брать из аттрибутов href ссылок расположенных внутри блока с классом orbit-container

Скаченные фото в директорию помещаются под именами сформированными по следующему шаблону: p{номер проекта}_photo_{номер по порядку}.{разширение файла}

После в этой папке создается пустой файл с именем ds.html

Далее делаем шаблон массива который будем заполнять собранными с переданной страницы данными.

[
    'title' => 'Проект дома "Маршак"',
    'img' => '/tmp_data/projects/pr_1/p1_main.jpeg',
    'slug' => 'proekt-doma-marshak',
    'description' => file_get_contents(public_path('/tmp_data/projects/pr_1/ds.html')),
                'gallery' => [
                    '/tmp_data/projects/pr_1/p1_photo_1.jpeg',
                    '/tmp_data/projects/pr_1/p1_photo_2.jpeg',
                    '/tmp_data/projects/pr_1/p1_photo_3.jpeg',
                    '/tmp_data/projects/pr_1/p1_photo_4.jpeg'
                ],
                'layout' => [
                    '/tmp_data/projects/pr_1/p1_plan_1.jpeg',
                ],
                'type' => 'Дом',
                'floors' => 1,
                'total_area' => 68,
                'wall_material' => 'СИП-панели',
                'foundation' => 'Ленточный фундамент',
                'ceiling_height' => 2.5,
                'flooring' => null,
                'mansard' => false,
                'plan_dimensions' => '9,4 x 8,7 м',
                'extension' => null,

]

Поле 'title' заполняем данными из h1 страницы
Поле 'img' заполняем адресом первого скаченного изображения
Поле 'slug' формируем при помощи Str::slug из h1 страницы
Поле 'description' оставляем как в шаблоне
Поле 'layout' присваиваем пустой массив
Поле 'type' Заполняем значением 'Дом'
Поле 'floors' заполняем полем найденным по Xpath //*[@id="project_container"]/div/div[4]/div[3]/p[2]
Поле 'total_area'  заполняем полем найденным по Xpath  //*[@id="project_container"]/div/div[4]/div[1]/p[2]
Поле 'wall_material'  присваиваем пустую строку
Поле 'foundation' Оставляем пустую строку
Поле 'ceiling_height' заполняем значением 2.5
Поле 'ceiling_height' заполняем значением 2.5
Поле 'flooring' Оставляем пустую строку
Поле 'mansard' Оставляем пустую строку
Поле 'plan_dimensions' Оставляем пустую строку
Поле 'extension' Оставляем пустую строку

Выводим получившийся массив на экран таким образом чтобы их можно было скопировать и вставить в код

_________

В файле комманды app\Console\Commands\WaterMark.php реализуй следующий функционал:

- Запрашиваем у пользователя адрес директории с фотографиями по умолчанию значение 'public\tmp_data\projects\pr_1'
- Запрашиваем у пользователя адрес файла с водяным знаком, по умолчанию значение 'public\tmp_data\rs_wm.jpg'
- Далее скрипт по очереди берет каждую фотографию из выбранной папки и накладывет выбранный файл с водяным знаком по следующим параметрам:
-- водяной знак не тирпжируется он один, накладывается в правый нижний угол
-- Водяной знак не прозрачный накладывается как есть
- Фото с наложенным водяным знаком сохнаняется в ту же директорию с сохранением имени и разширения
- Фото сохраняются в качестве исходного файла

Выполняя задание можеш задавать уточняющие вопросы я на все отвечу

_________

В файле database\seeders\ProjectSeeder.php есть массив $data для каждого элемента этого массива нужно придумать описание длинной около 500-550 символов и положить его в виде чистого html в файл ds.html в папку этого проекта. Описание составляй основываясь на данных обрабатываемого проекта.
Каждое описание заканчивай призывом звонить по телефону +7 (3462) 59-71-71 для уточнения информации.




______

В текущем Vue компоненте реализуй следующий функционал:

Данному компоненту передается стартовая цена
В компоненте есть массив или структура со следующими полями:
- Тип (заполнить: Коробка, Теплый контур, Черновая отделка, Под ключ)
- Описание (сгенерировать при помощи ai исходя из типов)
- Увеличение цены (10, 20, 30, 35 соответственно)

Типы выводится в select c класоом price-block__select. При выборе типа соответствующее описание подставляется в параграф  с классом price-block__comment стартовая цена увиличивается на указанный в массиве процен округляется до целых и выводится в форматированном виде вдив с класоом price-block__current-price между словами 'от' и '₽' получившаяся цена увиличиивается на 15% и выводится так же в форматированном виде в див с классом price-block__old-price

При выполнении задания не изменяй разметку в блоке template простол вставь нужные выводы данных.
